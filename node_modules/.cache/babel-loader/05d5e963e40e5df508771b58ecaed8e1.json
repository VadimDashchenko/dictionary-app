{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Work/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/dictionary/src/components/Charts.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport dictionary from '../store/Dictionary'; // @ts-ignore\n// import { Chart } from 'react-charts';\n\nimport { Chart } from 'react-google-charts';\nconst MyChart = observer(_c = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      width: 600,\n      height: 400,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this),\n      data: [['Dictionary', 'Default data', 'All words in dictionary'], ['Count words start with the letter', dictionary.startString.length, data.length], ['Count words end with the letter', dictionary.endString.length, data.length], ['times the letter ${string} appear in the dictionary', dictionary.inAll.length, data.length], ['The words have the same letter repeated in conjunction', dictionary.doubleLetter.length, data.length]],\n      options: {\n        title: 'Queries to dictionary',\n        chartArea: {\n          width: '50%'\n        },\n        hAxis: {\n          title: 'Total Population',\n          minValue: 0\n        },\n        vAxis: {\n          title: 'Total letters'\n        }\n      },\n      legendToggle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n});\n_c2 = MyChart;\nexport default MyChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyChart$observer\");\n$RefreshReg$(_c2, \"MyChart\");","map":{"version":3,"sources":["/Users/Work/Новая папка/dictionary/src/components/Charts.tsx"],"names":["React","observer","dictionary","Chart","MyChart","data","display","maxWidth","startString","length","endString","inAll","doubleLetter","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;AACA;;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAMA,MAAMC,OAAO,GAAGH,QAAQ,MAAC,CAAC;AAACI,EAAAA;AAAD,CAAD,KAAoB;AAEzC,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,SAAS,EAAC,aAHd;AAII,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ;AAKI,MAAA,IAAI,EAAE,CACF,CAAC,YAAD,EAAe,cAAf,EAA+B,yBAA/B,CADE,EAEF,CAAC,mCAAD,EAAsCL,UAAU,CAACM,WAAX,CAAuBC,MAA7D,EAAqEJ,IAAI,CAACI,MAA1E,CAFE,EAGF,CAAC,iCAAD,EAAoCP,UAAU,CAACQ,SAAX,CAAqBD,MAAzD,EAAiEJ,IAAI,CAACI,MAAtE,CAHE,EAIF,CAAC,qDAAD,EAAwDP,UAAU,CAACS,KAAX,CAAiBF,MAAzE,EAAiFJ,IAAI,CAACI,MAAtF,CAJE,EAKF,CAAC,wDAAD,EAA2DP,UAAU,CAACU,YAAX,CAAwBH,MAAnF,EAA2FJ,IAAI,CAACI,MAAhG,CALE,CALV;AAYI,MAAA,OAAO,EAAE;AACLI,QAAAA,KAAK,EAAE,uBADF;AAELC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFN;AAGLC,QAAAA,KAAK,EAAE;AACHH,UAAAA,KAAK,EAAE,kBADJ;AAEHI,UAAAA,QAAQ,EAAE;AAFP,SAHF;AAOLC,QAAAA,KAAK,EAAE;AACHL,UAAAA,KAAK,EAAE;AADJ;AAPF,OAZb;AAuBI,MAAA,YAAY;AAvBhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA/BuB,CAAxB;MAAMT,O;AAiCN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { observer } from 'mobx-react-lite';\nimport dictionary from '../store/Dictionary';\n// @ts-ignore\n// import { Chart } from 'react-charts';\nimport { Chart } from 'react-google-charts';\n\ninterface IChart {\n    data: any[]\n}\n\nconst MyChart = observer(({data}: IChart) => {\n\n    return (\n        <div style={{ display: 'flex', maxWidth: 1000 }}>\n            <Chart\n                width={600}\n                height={400}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                    ['Dictionary', 'Default data', 'All words in dictionary'],\n                    ['Count words start with the letter', dictionary.startString.length, data.length],\n                    ['Count words end with the letter', dictionary.endString.length, data.length],\n                    ['times the letter ${string} appear in the dictionary', dictionary.inAll.length, data.length],\n                    ['The words have the same letter repeated in conjunction', dictionary.doubleLetter.length, data.length],\n                ]}\n                options={{\n                    title: 'Queries to dictionary',\n                    chartArea: { width: '50%' },\n                    hAxis: {\n                        title: 'Total Population',\n                        minValue: 0,\n                    },\n                    vAxis: {\n                        title: 'Total letters',\n                    },\n                }}\n                legendToggle\n            />\n        </div>\n    )\n})\n\nexport default MyChart;"]},"metadata":{},"sourceType":"module"}