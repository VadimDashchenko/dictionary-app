{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\nclass Dictionary {\n  constructor() {\n    this.endString = [];\n    this.startString = [];\n    this.inAll = [];\n    this.doubleLetter = [];\n    makeAutoObservable(this);\n  }\n\n  startWord(data) {\n    // @ts-ignore\n    this.startString = this.startString.concat(data);\n  }\n\n  endWord(data) {\n    // @ts-ignore\n    this.endString = this.endString.concat(data);\n  }\n\n  findInAll(data) {\n    // @ts-ignore\n    this.inAll = this.inAll.concat(data);\n  }\n\n  findDoubleLetter(data) {\n    // @ts-ignore\n    this.doubleLetter = this.doubleLetter.concat(data);\n  }\n\n  clearInAll() {\n    this.startString = [];\n    this.endString = [];\n    this.inAll = [];\n    this.doubleLetter = [];\n  }\n\n}\n\nexport default new Dictionary();","map":{"version":3,"sources":["/Users/Work/Новая папка/dictionary/src/store/Dictionary.tsx"],"names":["makeAutoObservable","Dictionary","constructor","endString","startString","inAll","doubleLetter","startWord","data","concat","endWord","findInAll","findDoubleLetter","clearInAll"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAEA,MAAMC,UAAN,CAAiB;AAObC,EAAAA,WAAW,GAAE;AAAA,SALZC,SAKY,GALO,EAKP;AAAA,SAJZC,WAIY,GAJS,EAIT;AAAA,SAHZC,KAGY,GAHG,EAGH;AAAA,SAFZC,YAEY,GAFU,EAEV;AACTN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEDO,EAAAA,SAAS,CAACC,IAAD,EAAc;AACnB;AACA,SAAKJ,WAAL,GAAmB,KAAKA,WAAL,CAAiBK,MAAjB,CAAwBD,IAAxB,CAAnB;AACH;;AAEDE,EAAAA,OAAO,CAACF,IAAD,EAAc;AACjB;AACA,SAAKL,SAAL,GAAiB,KAAKA,SAAL,CAAeM,MAAf,CAAsBD,IAAtB,CAAjB;AACH;;AAEDG,EAAAA,SAAS,CAACH,IAAD,EAAc;AACnB;AACA,SAAKH,KAAL,GAAa,KAAKA,KAAL,CAAWI,MAAX,CAAkBD,IAAlB,CAAb;AACH;;AAEDI,EAAAA,gBAAgB,CAACJ,IAAD,EAAc;AAC1B;AACA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBG,MAAlB,CAAyBD,IAAzB,CAApB;AACH;;AAEDK,EAAAA,UAAU,GAAG;AACT,SAAKT,WAAL,GAAmB,EAAnB;AACA,SAAKD,SAAL,GAAiB,EAAjB;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,EAApB;AACH;;AApCY;;AAuCjB,eAAe,IAAIL,UAAJ,EAAf","sourcesContent":["import { makeAutoObservable } from 'mobx';\n\nclass Dictionary {\n\n     endString: any[] = [];\n     startString: any[] = [];\n     inAll: any[] = [];\n     doubleLetter: any[] = [];\n\n    constructor(){\n        makeAutoObservable(this)\n    }\n\n    startWord(data: any[]) {\n        // @ts-ignore\n        this.startString = this.startString.concat(data);\n    }\n\n    endWord(data: any[]) {\n        // @ts-ignore\n        this.endString = this.endString.concat(data)\n    }\n\n    findInAll(data: any[]) {\n        // @ts-ignore\n        this.inAll = this.inAll.concat(data)\n    }\n\n    findDoubleLetter(data: any[]) {\n        // @ts-ignore\n        this.doubleLetter = this.doubleLetter.concat(data)\n    }\n\n    clearInAll() {\n        this.startString = [];\n        this.endString = [];\n        this.inAll = [];\n        this.doubleLetter = [];\n    }\n}\n\nexport default new Dictionary();"]},"metadata":{},"sourceType":"module"}