{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\nclass Dictionary {\n  constructor() {\n    this.endString = [];\n    this.startString = [];\n    this.inAll = [];\n    this.doubleLetter = [];\n    this.allWords = [];\n    makeAutoObservable(this);\n  }\n\n  startWord(data) {\n    // @ts-ignore\n    this.startString = this.startString.concat(data);\n    console.log(this.startString);\n  }\n\n  endWord(data) {\n    // @ts-ignore\n    this.endString = this.endString.concat(data);\n  }\n\n  findInAll(data) {\n    // @ts-ignore\n    this.inAll = this.inAll.concat(data);\n  }\n\n  findDoubleLetter(data) {\n    // @ts-ignore\n    this.doubleLetter = this.doubleLetter.concat(data);\n  }\n\n  clearInAll() {\n    this.startString = [];\n    this.endString = [];\n    this.inAll = [];\n    this.doubleLetter = [];\n    this.allWords = [];\n  }\n\n  getAll(data) {\n    this.allWords = this.allWords.concat(data);\n  }\n\n}\n\nexport default new Dictionary();","map":{"version":3,"sources":["/Users/Work/Новая папка/dictionary/src/store/Dictionary.tsx"],"names":["makeAutoObservable","Dictionary","constructor","endString","startString","inAll","doubleLetter","allWords","startWord","data","concat","console","log","endWord","findInAll","findDoubleLetter","clearInAll","getAll"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAEA,MAAMC,UAAN,CAAiB;AAQbC,EAAAA,WAAW,GAAE;AAAA,SANZC,SAMY,GANO,EAMP;AAAA,SALZC,WAKY,GALS,EAKT;AAAA,SAJZC,KAIY,GAJG,EAIH;AAAA,SAHZC,YAGY,GAHU,EAGV;AAAA,SAFZC,QAEY,GAFM,EAEN;AACTP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEDQ,EAAAA,SAAS,CAACC,IAAD,EAAc;AACnB;AACA,SAAKL,WAAL,GAAmB,KAAKA,WAAL,CAAiBM,MAAjB,CAAwBD,IAAxB,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,WAAjB;AACH;;AAEDS,EAAAA,OAAO,CAACJ,IAAD,EAAc;AACjB;AACA,SAAKN,SAAL,GAAiB,KAAKA,SAAL,CAAeO,MAAf,CAAsBD,IAAtB,CAAjB;AACH;;AAEDK,EAAAA,SAAS,CAACL,IAAD,EAAc;AACnB;AACA,SAAKJ,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBD,IAAlB,CAAb;AACH;;AAEDM,EAAAA,gBAAgB,CAACN,IAAD,EAAc;AAC1B;AACA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBI,MAAlB,CAAyBD,IAAzB,CAApB;AACH;;AAEDO,EAAAA,UAAU,GAAG;AACT,SAAKZ,WAAL,GAAmB,EAAnB;AACA,SAAKD,SAAL,GAAiB,EAAjB;AACA,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACH;;AAEDU,EAAAA,MAAM,CAACR,IAAD,EAAc;AAChB,SAAKF,QAAL,GAAgB,KAAKA,QAAL,CAAcG,MAAd,CAAqBD,IAArB,CAAhB;AACH;;AA3CY;;AA8CjB,eAAe,IAAIR,UAAJ,EAAf","sourcesContent":["import { makeAutoObservable } from 'mobx';\n\nclass Dictionary {\n\n     endString: any[] = [];\n     startString: any[] = [];\n     inAll: any[] = [];\n     doubleLetter: any[] = [];\n     allWords: any[] = []\n\n    constructor(){\n        makeAutoObservable(this)\n    }\n\n    startWord(data: any[]) {\n        // @ts-ignore\n        this.startString = this.startString.concat(data);\n        console.log(this.startString)\n    }\n\n    endWord(data: any[]) {\n        // @ts-ignore\n        this.endString = this.endString.concat(data)\n    }\n\n    findInAll(data: any[]) {\n        // @ts-ignore\n        this.inAll = this.inAll.concat(data)\n    }\n\n    findDoubleLetter(data: any[]) {\n        // @ts-ignore\n        this.doubleLetter = this.doubleLetter.concat(data)\n    }\n\n    clearInAll() {\n        this.startString = [];\n        this.endString = [];\n        this.inAll = [];\n        this.doubleLetter = [];\n        this.allWords = [];\n    }\n\n    getAll(data: any[]) {\n        this.allWords = this.allWords.concat(data);\n    }\n}\n\nexport default new Dictionary();"]},"metadata":{},"sourceType":"module"}